@model Agro_Saffron.Models.ViewModels.ShoppingCartViewModel

@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container py-4">
    <div class="row">
        <div class="col-12">
            <h2 class="mb-4">Your Shopping Cart</h2>

            <!-- Success/Error Messages -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (Model.CartItems.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.CartItems)
                                    {
                                        <tr id="cart-item-@item.Id">
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <img src="@item.Product.ImageUrl" alt="@item.Product.Name"
                                                         class="img-thumbnail me-3" style="width: 80px; height: 80px; object-fit: cover;">
                                                    <div>
                                                        <h6 class="mb-1">@item.Product.Name</h6>
                                                        <small class="text-muted">@item.Product.Category.Name</small>
                                                        @if (item.Quantity > item.Product.StockQuantity)
                                                        {
                                                            <div class="text-warning small mt-1">
                                                                Only @item.Product.StockQuantity available in stock
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <span class="h6">$@item.Product.Price.ToString("F2")</span>
                                            </td>
                                            <td class="align-middle">
                                                <div class="quantity-controls d-flex align-items-center">
                                                    <button type="button" class="btn btn-outline-secondary btn-sm quantity-decrease"
                                                            data-item-id="@item.Id" @(item.Quantity <= 1 ? "disabled" : "")>
                                                        <i class="fas fa-minus"></i>
                                                    </button>
                                                    <input type="number" class="form-control form-control-sm quantity-input mx-2"
                                                           value="@item.Quantity" min="1" max="@item.Product.StockQuantity"
                                                           style="width: 70px;" data-item-id="@item.Id">
                                                    <button type="button" class="btn btn-outline-secondary btn-sm quantity-increase"
                                                            data-item-id="@item.Id" @(item.Quantity >= item.Product.StockQuantity ? "disabled" : "")>
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <span class="h6 text-success item-total" data-item-id="@item.Id">
                                                    $@item.TotalPrice.ToString("F2")
                                                </span>
                                            </td>
                                            <td class="align-middle">
                                                <button type="button" class="btn btn-outline-danger btn-sm remove-item"
                                                        data-item-id="@item.Id" title="Remove from cart">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot class="table-light">
                                    <tr>
                                        <td colspan="3" class="text-end"><strong>Cart Total:</strong></td>
                                        <td colspan="2">
                                            <span class="h4 text-success" id="cart-total">$@Model.CartTotal.ToString("F2")</span>
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <a href="@Url.Action("Index", "Products")" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left"></i> Continue Shopping
                            </a>

                            <div>
                                <button type="button" class="btn btn-outline-danger me-2" id="clear-cart-btn">
                                    <i class="fas fa-trash"></i> Clear Cart
                                </button>
                                <a href="@Url.Action("Checkout", "Orders")" class="btn btn-success btn-lg">
                                    <i class="fas fa-lock"></i> Proceed to Checkout
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-shopping-cart fa-4x text-muted mb-4"></i>
                    <h3>Your cart is empty</h3>
                    <p class="text-muted mb-4">Add some produts to your cart!</p>
                    <a href="@Url.Action("Index", "Products")" class="btn btn-success btn-lg">
                        <i class="fas fa-seedling"></i> Start Shopping
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@section Styles {
    <style>
        .quantity-controls .btn {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .quantity-input {
            text-align: center;
        }

        .table th {
            border-top: none;
            font-weight: 600;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Update quantity
            function updateQuantity(itemId, quantity) {
                fetch('/ShoppingCart/UpdateQuantity', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ itemId: itemId, quantity: quantity })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Update item total
                        const itemTotalElement = document.querySelector(`.item-total[data-item-id="${itemId}"]`);
                        if (itemTotalElement) {
                            itemTotalElement.textContent = `$${data.itemTotal.toFixed(2)}`;
                        }

                        // Update cart total
                        const cartTotalElement = document.getElementById('cart-total');
                        if (cartTotalElement) {
                            cartTotalElement.textContent = `$${data.cartTotal.toFixed(2)}`;
                        }

                        // Update cart count in navbar
                        updateCartCount(data.cartCount);

                        // Update button states
                        updateButtonStates(itemId, quantity);
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Error updating quantity');
                });
            }

            // Update button states
            function updateButtonStates(itemId, quantity) {
                const decreaseBtn = document.querySelector(`.quantity-decrease[data-item-id="${itemId}"]`);
                const increaseBtn = document.querySelector(`.quantity-increase[data-item-id="${itemId}"]`);
                const input = document.querySelector(`.quantity-input[data-item-id="${itemId}"]`);

                if (decreaseBtn) {
                    decreaseBtn.disabled = quantity <= 1;
                }
                if (increaseBtn && input) {
                    const maxQuantity = parseInt(input.getAttribute('max'));
                    increaseBtn.disabled = quantity >= maxQuantity;
                }
            }

            // Quantity decrease
            document.querySelectorAll('.quantity-decrease').forEach(btn => {
                btn.addEventListener('click', function() {
                    const itemId = this.getAttribute('data-item-id');
                    const input = document.querySelector(`.quantity-input[data-item-id="${itemId}"]`);
                    let quantity = parseInt(input.value) - 1;
                    if (quantity < 1) quantity = 1;
                    input.value = quantity;
                    updateQuantity(itemId, quantity);
                });
            });

            // Quantity increase
            document.querySelectorAll('.quantity-increase').forEach(btn => {
                btn.addEventListener('click', function() {
                    const itemId = this.getAttribute('data-item-id');
                    const input = document.querySelector(`.quantity-input[data-item-id="${itemId}"]`);
                    let quantity = parseInt(input.value) + 1;
                    const maxQuantity = parseInt(input.getAttribute('max'));
                    if (quantity > maxQuantity) quantity = maxQuantity;
                    input.value = quantity;
                    updateQuantity(itemId, quantity);
                });
            });

            // Quantity input change
            document.querySelectorAll('.quantity-input').forEach(input => {
                input.addEventListener('change', function() {
                    const itemId = this.getAttribute('data-item-id');
                    let quantity = parseInt(this.value) || 1;
                    const maxQuantity = parseInt(this.getAttribute('max'));
                    if (quantity < 1) quantity = 1;
                    if (quantity > maxQuantity) quantity = maxQuantity;
                    this.value = quantity;
                    updateQuantity(itemId, quantity);
                });
            });

            // Remove item
            document.querySelectorAll('.remove-item').forEach(btn => {
                btn.addEventListener('click', function() {
                    const itemId = this.getAttribute('data-item-id');
                    if (confirm('Are you sure you want to remove this item from your cart?')) {
                        fetch('/ShoppingCart/RemoveFromCart', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Requested-With': 'XMLHttpRequest'
                            },
                            body: JSON.stringify({ itemId: itemId })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Remove row from table
                                const row = document.getElementById(`cart-item-${itemId}`);
                                if (row) {
                                    row.remove();
                                }

                                // Update cart total
                                const cartTotalElement = document.getElementById('cart-total');
                                if (cartTotalElement) {
                                    cartTotalElement.textContent = `$${data.cartTotal.toFixed(2)}`;
                                }

                                // Update cart count
                                updateCartCount(data.cartCount);

                                // If cart is empty, reload page
                                if (data.cartCount === 0) {
                                    location.reload();
                                }
                            } else {
                                alert(data.message);
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Error removing item');
                        });
                    }
                });
            });

            // Clear cart
            document.getElementById('clear-cart-btn')?.addEventListener('click', function() {
                if (confirm('Are you sure you want to clear your entire cart?')) {
                    fetch('/ShoppingCart/ClearCart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert(data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error clearing cart');
                    });
                }
            });

            // Update cart count in navbar
            function updateCartCount(count) {
                const cartCountElements = document.querySelectorAll('.cart-count');
                cartCountElements.forEach(element => {
                    element.textContent = count;
                });
            }
        });
    </script>
}